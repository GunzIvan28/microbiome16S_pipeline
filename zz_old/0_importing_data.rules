rule prepare_manifest:
    input:
        R1_reads = expand("raw_reads/{sample}_R1.fastq.gz", sample=list(read_naming.keys())),
        R2_reads = expand("raw_reads/{sample}_R2.fastq.gz", sample=list(read_naming.keys())),
    output:
        "{tool}/0_importing_data/manifest.csv",
    params:
        samples = list(read_naming.keys()),
        path = pipeline_path,
    shell:
        """
        echo "sample-id,absolute-filepath,direction" >> {output[0]}
        for i in {params.samples}; do
            echo $i,$PWD/raw_reads/$i\_R1.fastq.gz,"forward" >> {output[0]}
        done
        for i in {params.samples}; do
            echo $i,$PWD/raw_reads/$i\_R2.fastq.gz,"reverse" >> {output[0]}
        done        
        """

rule qiime_import:
    conda:
        "../envs/qiime2-2018.6-py35-linux-conda.yml"
    input:
        "{tool}/0_importing_data/manifest.csv",
    output:
        "{tool}/0_importing_data/imported_data.qza",
    log:
        logging_folder + "{tool}/import.txt"
    shell:
        """
        qiime tools import \
        --type 'SampleData[PairedEndSequencesWithQuality]' \
        --input-path {input[0]} \
        --output-path {output[0]} \
        --source-format PairedEndFastqManifestPhred33 >> {log[0]}          
        """
