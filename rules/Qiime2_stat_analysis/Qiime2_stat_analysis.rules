
rule Qiime2_samples_filtration :
    conda:
        "../../envs/QIIME2-2018.8.yml"
    input:
        count_table = "{tool}/2_denoised/count-table.qza",
        Metadata_table = config["local_samples"],
    output:
        output1 = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/filtered_samples.qza",
    params:
        filtration = config["Filtration_rule"]
    log:
        logging_folder + "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/filtered_samples.txt"
    shell:
        '''
        qiime feature-table filter-samples \
            --i-table {input[count_table]} \
            --m-metadata-file {input[Metadata_table]} \
            --p-where {params[filtration]} \
            --o-filtered-table {output[output1]}
        '''

rule create_visualize_table_QIIME2_filtered :
    conda:
        "../../envs/QIIME2-2018.8.yml"
    input:
        "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/filtered_samples.qza"
    output:
        "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/filtered_samples.qzv"
    log:
        logging_folder + "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/filtered_samples.txt"
    shell:
        '''
        qiime metadata tabulate \
            --m-input-file {input} \
            --o-visualization {output}
        '''




rule Qiime2_taxa_collapse :
    conda:
        "../../envs/QIIME2-2018.8.yml"
    input:
        table = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/filtered_samples.qza",
        taxonomy = "{tool}/3_classified/{classifier}/{db_taxonomy}/dna-sequences_tax_assignments.qza"
    output:
         output1 = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/taxa_collapse_{collapse_level}/coll_filtered_samples.qza"
    params:
        collapse_level = lambda wildcards: wildcards.collapse_level
    log:
        logging_folder + "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/taxa_collapse_{collapse_level}/coll_filtered_samples.txt"
    shell:
        '''
        qiime taxa collapse \
          --i-table {input[table]} \
          --i-taxonomy {input[taxonomy]} \
          --p-level {wildcards.collapse_level} \
          --o-collapsed-table {output}
        '''


rule Qiime2_pseudocounts :
    conda:
        "../../envs/QIIME2-2018.8.yml"
    input:
        "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/taxa_collapse_{collapse_level}/coll_filtered_samples.qza"
    output:
        "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/taxa_collapse_{collapse_level}/comp_filtered_samples.qza"
    log:
        logging_folder + "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/taxa_collapse_{collapse_level}/comp_filtered_samples.txt"
    shell:
        '''
        qiime composition add-pseudocount \
        --i-table {input} \
        --o-composition-table {output}
        '''


rule Qiime2_ANCOM :
    conda:
        "../../envs/QIIME2-2018.8.yml"
    input:
        table = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/taxa_collapse_{collapse_level}/comp_filtered_samples.qza",
        Metadata = config["local_samples"],
    output:
        "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/taxa_collapse_{collapse_level}/ANCOM_{ANCOM_factor}.qzv"
    params:
        ANCOM_factor = lambda wildcards: wildcards.ANCOM_factor
    log:
        logging_folder + "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/adundancy_comparison/taxa_collapse_{collapse_level}/ANCOM_{ANCOM_factor}.txt"
    shell:
        '''
        qiime composition ancom \
          --i-table {input[table]} \
          --m-metadata-file {input[Metadata]} \
          --m-metadata-column {params[ANCOM_factor]} \
          --o-visualization {output}
        '''



