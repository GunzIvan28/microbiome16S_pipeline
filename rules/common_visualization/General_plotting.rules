
rule raw_to_filtered_reads_stats:
    conda:
        "../../envs/R_visualization.yml"
    input:
        phyloseq_object = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/phyloseq_object",
        multi_QC_report_path = "QC/multiqc_raw_reads_report_data/multiqc_general_stats.txt"
    output:
        raw_to_filtered_reads_stats = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/reads/raw_to_filtered_reads_stats.tsv"
    log:
        logging_folder + "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/reads/raw_to_filtered_reads_stats.txt"
    script:
        "scripts/raw_to_filtered_reads_stats.R"


rule reads_plot_with_filtered:
    conda:
        "../../envs/R_visualization.yml"
    input:
        raw_to_filtered_reads_stats_path = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/reads/raw_to_filtered_reads_stats.tsv",
        Metadata_table = config["local_samples"],
        multi_QC_report_path = "QC/multiqc_raw_reads_report_data/multiqc_general_stats.txt"
    output:
        reads_plot_with_filtered = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/reads/reads_plot_with_filtered.png"
    params:
        grouping_column = config["grouping_column"],
        x_axis_column = config["x_axis_column"]
    log:
        logging_folder + "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/reads/reads_plot_with_filtered.txt"
    script:
        "scripts/reads_plots_with_filtration.R"



rule KRONA_plots:
    conda:
        "../../envs/R_visualization.yml"
    input:
        phyloseq_melted_table = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/phyloseq_melted_table.tsv"
    output:
        output = expand("{{tool}}/5_visualization/{{classifier}}/{{db_taxonomy}}/{{raref_or_not}}/KRONA/{grouping_column}.html", grouping_column=list(set(all_samples[config["grouping_column"]])))
    params:
        grouping_column = config["grouping_column"],
        x_axis_column = config["x_axis_column"]
    log:
        logging_folder + "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/KRONA.txt"
    script:
        "scripts/KRONA_plots.R"



rule alpha_diversity:
    conda:
        "../../envs/R_visualization.yml"
    input:
        phyloseq_object = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/phyloseq_object",
        Metadata_table = config["local_samples"]
    output:
        alpha_plot = expand("{{tool}}/5_visualization/{{classifier}}/{{db_taxonomy}}/{{raref_or_not}}/alpha_diversity/{grouping_column}_alpha_divesity.png",grouping_column=list(set(all_samples[config["grouping_column"]]))),
    params:
        grouping_column = config["grouping_column"],
        x_axis_column = config["x_axis_column"],
        sample_type = config["sample_type"]
    log:
        logging_folder + "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/alpha_diversity/alpha_divesity.txt"
    script:
        "scripts/alpha_diversity.R"


rule ordination:
    conda:
        "../../envs/R_visualization.yml"
    input:
        phyloseq_object = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/phyloseq_object",
        Metadata_table = config["local_samples"]
    output:
        output1 = expand("{{tool}}/5_visualization/{{classifier}}/{{db_taxonomy}}/{{raref_or_not}}/ordination/{grouping_column}_unifrac.png", grouping_column=list(set(all_samples[config["grouping_column"]]))),
        output2 = expand("{{tool}}/5_visualization/{{classifier}}/{{db_taxonomy}}/{{raref_or_not}}/ordination/{grouping_column}_wunifrac.png", grouping_column=list(set(all_samples[config["grouping_column"]]))),
        # output3 =expand("{{tool}}/5_visualization/{{classifier}}/{{db_taxonomy}}/{{raref_or_not}}/ordination/{grouping_column}_dpcoa.png", grouping_column=list(set(all_samples[config["grouping_column"]]))),
        output4 = expand("{{tool}}/5_visualization/{{classifier}}/{{db_taxonomy}}/{{raref_or_not}}/ordination/{grouping_column}_jsd.png", grouping_column=list(set(all_samples[config["grouping_column"]]))),
        output5 = expand("{{tool}}/5_visualization/{{classifier}}/{{db_taxonomy}}/{{raref_or_not}}/ordination/{grouping_column}_bray.png", grouping_column=list(set(all_samples[config["grouping_column"]]))),
        output6 = expand("{{tool}}/5_visualization/{{classifier}}/{{db_taxonomy}}/{{raref_or_not}}/ordination/{grouping_column}_jaccard.png", grouping_column=list(set(all_samples[config["grouping_column"]])))
    params:
        grouping_column = config["grouping_column"],
        x_axis_column = config["x_axis_column"],
        sample_type = config["sample_type"]
    log:
        logging_folder + "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/ordination/logs.txt"
    script:
        "scripts/ordination.R"

