
rule rarefy:
    conda:
        "../../envs/R_visualization.yml"
    input:
        phyloseq_object = "{tool}/5_visualization/{classifier}/{db_taxonomy}/norarefaction/phyloseq_object",
        Metadata_table = config["local_samples"],
        taxonomy_table = "{tool}/3_classified/{classifier}/{db_taxonomy}/dna-sequences_tax_assignments.txt",
        tax_tree = "{tool}/4_tree/tree.nwk"

    output:
        rarefied_phyloseq = "{tool}/5_visualization/{classifier}/{db_taxonomy}/rarefaction_{rarefaction_value}/phyloseq_object"
    params:
        rarefaction_value = "{rarefaction_value}" #lambda wildcards: wildcards.rarefaction_value
    log:
        logging_folder + "{tool}/5_visualization/{classifier}/{db_taxonomy}/rarefaction_{rarefaction_value}/rarefy_phyloseq_object.txt"
    script:
        "scripts/rarefy.R"


rule rarefaction_curve:
    conda:
        "../../envs/R_visualization.yml"
    input:
        phyloseq_object = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/phyloseq_object",
        Metadata_table = config["local_samples"]
    output:
        rarefaction_curve = "{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/rarefaction_curve.png"
    params:
        sample_type = config["sample_type"],
        x_axis_column = config["x_axis_column"]
    log:
        logging_folder +"{tool}/5_visualization/{classifier}/{db_taxonomy}/{raref_or_not}/rarefaction_curve.txt"
    script:
        "scripts/rarefaction_curve.R"
