
rule Import_DB :
    conda :
        "../../envs/QIIME2-2019.01.yml"
    input :
        config["DBpath_seq"]
    output :
        workflow.basedir + "/data/DB_intermediate/EzBioCloud_seq.qza"
    log :
         workflow.basedir + "/data/DB_intermediate/log/EzBioCloud_seq.log"
    threads :
        1
    shell :
         '''
        qiime tools import \
        --type 'FeatureData[Sequence]' \
        --input-path {input} \
        --output-path {output}
        '''


rule Extract_V3V4 :
    conda :
        "../../envs/QIIME2-2019.01.yml"
    input :
        workflow.basedir + "/data/DB_intermediate/EzBioCloud_seq.qza"
    output :
        workflow.basedir + "/data/DB_intermediate/EzBioCloudV3V4_seq.qza"
    params :
        primer_forward = config["forward_primer"],
        primer_reverse = config["reverse_primer"],
        length = config["length_max"]
    log :
        workflow.basedir + "/data/DB_intermediate/log/EzBioCloudV3V4_seq.log"
    threads :
        1
    shell :
         '''
        qiime feature-classifier extract-reads \
        --i-sequences {input} \
        --p-f-primer {params[primer_forward]} \
        --p-r-primer {params[primer_reverse]} \
        --p-trunc-len {params[length]} \
        --o-reads {output} \
        --verbose
        '''



rule Export :
   conda :
        "../../envs/QIIME2-2019.01.yml"
   input :
        workflow.basedir + "/data/DB_intermediate/EzBioCloudV3V4_seq.qza"
   output :
        workflow.basedir + "/data/ezbiocloud_charlotte/EzBioCloudV3V4_seq.fasta"
   log :
        workflow.basedir + "/data/DB_intermediate/log/EzBioCloudV3V4_seq1.log"
   threads :
        1
   shell :
         '''
        qiime tools export \
        --input-path {input} \
        --output-format {output}
        '''



rule Vsearch :
    conda :
        "../../envs/QIIME2-2019.01.yml"
    input :
         workflow.basedir + "/data/ezbiocloud_charlotte/EzBioCloudV3V4_seq.fasta/dna-sequences.fasta"
    output :
        fasta = workflow.basedir + "/data/DB_intermediate/EzBioCloud_Vsearch_V3V4_seq.fasta",
        uc = workflow.basedir + "/data/DB_intermediate/EzBioCloud_Vsearch_V3V4_seq.uc"
    log :
        workflow.basedir + "/data/DB_intermediate/log/EzBioCloud_Vsearch_V3V4_seq.log"
    threads :
        1
    shell :
         '''
        vsearch \
        --derep_fulllength {input} \
        --output {output[fasta]} \
        --uc {output[uc]}
        '''



rule Taxonomy :
    conda :
        "../../envs/R_DB_processing.yml"
    input :
        tax = config["DBpath_tax"],
        uc = workflow.basedir + "/data/DB_intermediate/EzBioCloud_Vsearch_V3V4_seq.uc"
    output :
        filtrated = workflow.basedir + "/data/DB_intermediate/EzBioCloud_V3V4_taxonomy.txt",
        all = workflow.basedir + "/data/DB_intermediate/EzBioCloud_V3V4_all_taxonomy.txt",
        qiime = workflow.basedir + "/data/ezbiocloud_charlotte/EzBioCloud_V3V4_taxonomy_Qiime.txt",
        qiime_all = workflow.basedir + "/data/ezbiocloud_charlotte/EzBioCloud_V3V4_all_taxonomy_Qiime.txt"
    log :
       workflow.basedir + "/data/DB_intermediate/log/EzBioCloud_V3V4_taxonomy.log"
    threads :
        1
    script :
        "scripts/DB_EzBioCloud_processing.R"