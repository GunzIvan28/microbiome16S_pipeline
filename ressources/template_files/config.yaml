## Dataset ############################################################################################################
### Set input samples list. (Mandatory, one of them or both)
link_directory: links # links by default.
sra_samples: example_sra_samples.tsv ## To access to Sequences Read Archive
local_samples: example_local_samples.tsv ## Local analysis

### Sample processing metadata definition
run_column: seq_run # Column identifying the sequencing run (sequencing error are learned for each run with DADA2)
filter_meta_column: study_name # Column from which we filte samples
filter_column_value: pipeline_validation # Value of this column for which we keep samples

### Choose the denoising approach, either the "vsearch" to generate classical 97% identity OTUs or the "DADA2" for errors corrected 100% ASVs
denoiser: ["DADA2", "vsearch"] # "vsearch", "DADA2" or both. For ITS (see below) only DADA2 has been tested.

### PCR primers trimming sequences (with PANDAseq for vsearch approach and Cutadapt for DADA2)
Trim_primers: True # False to skip primers trimming (usefull if unkown primers or already trimmed in the input reads, for instance for SRA deposited reads)
ITS_or_16S: 16S # ITS or 16S, affects the primers trimming. With ITS, reverse occurence of the primer is allowed in the opposed read.
min_overlap: 20 # Min overlap of the reads for paired-end reads merging
forward_primer: CCTACGGGNGGCWGCAG # CCTACGGGNGGCWGCAG for Illumina V3V4
reverse_primer: GACTACHVGGGTATCTAATCC # GACTACHVGGGTATCTAATCC for Illumina V3V4

### Merged sequences length-based filtering
merged_min_length: 390 # from 390 to 400 for V3V4
merged_max_length: 500 # from 450 to 500 for V3V4

### DADA2 specific settings ###########################################################################################
#### Trim reads based on length. Reads shorter than this length are trimmed.
DADA2_F_reads_length_trim: 280 # 280 recommended to remove low quality ends of R1. Must be < than read_length - trimmed_primer_length
DADA2_R_reads_length_trim: 255 # 250 recommended to remove low quality ends of R2. Must be < than read_length - trimmed_primer_length

### Filter reads based on number of expected errors after trimming
F_extected_error: 6 # 6 recommended, increase if too much reads are filtered out. Apply to DADA2 approach only
R_extected_error: 6 # 6 recommended, increase if too much reads are filtered out. Apply to DADA2 approach only

### Taxonomic assignment ##############################################################################################
### Reference database
tax_DB: ["Silva132.201908","ezbiocloud201805.201909", "unite201902"] # must be the name of the folder containing files named "DB_amp.fasta" and "DB_amp_taxonomy.txt" in /data/. Can be multiple.
### Taxonimc classifier.
classifier: ["qiimerdp", "dada2rdp","decipher"] # one or more from :"qiimerdp", "dada2rdp","decipher"


## Reads post-processing ##############################################################################################
rarefaction_value: [20000] # value for rarefaction. 20000 is generally enough reads but must be assessed by rarefaction curve.
min_prevalence: [0,10] # proporition (in %) of samples in which the feature has to be found to be kept
min_abundance: [0,100] # minimal count to be kept
normalization: ["TSS", "CLR", "CSS","TMM", "NONE"] # value for counts normalization. Using script form https://github.com/biobakery/Maaslin2
viz_replace_empty_tax: TRUE # "TRUE" is recommended to replace empty taxonomic levels by "_sp" for species, "_g" for the genus etc.... Otherwise they are left empty
filter_tax_rank: ["Kingdom"] # At which taxonomic rank we filter in. (Usually "Kingdom")
filter_lineage: ["Bacteria"] # What value of filter_tax_rank we keep. (Usually "Bacteria")
filter_out_tax_rank: ["Phylum"] # At which taxonomic rank we filter out. (Usually "Phylum")
filter_out_lineage: ["Bacteria_phy"] # Which value of filter_out_tax_rank we filter out. (Usually "Bacteria_phy" to remove suspicious sequences assigned as Bacteria but which are probably not.

## Visualization ######################################################################################################
### Select output
Barplots: True # or False
Heatmaps: True # or False
Alpha_divs: True # or False
alpha_metrics: ["Shannon", "Simpson", "InvSimpson", "Chao1"]
Distance_ordinations: True # or False
Constrained_ordinations: False # or False
Unconstrained_ordinations: False # or False

### Visualization general settings
grouping_column: ["sample_group"] # Column for which a plot will be generated for each value of.
sample_label: sample_label # Column in "local_samples" used to label samples in output. Cannot be the first column and must be unique. (KRONA, heatmaps, barplots)
facet_plot: TRUE #(or 'FALSE') # Create facet plots with ggplot2 (alpha diversity, barplots and heatmaps).
facetting_column: sample_label # If facets, which column in "local_samples" contains the information for facetting
color_factor: sample_source # Column in "local_samples" used to color points and fill plots (alpha diversity, ordination)
shape_factor : sample_source # Column in "local_samples" used to for shapes of points (ordination)

### Barplots and heatmaps parameters
tax_ranks: ["Family", "Genus", "Species", "OTU"] # taxonomic levels for plotting
relative_or_absolute_plotting: ["relative", "absolute"] # Plot relative of absolute values. Relative is recommended!
relative_or_absolute_filtering: ["relative", "absolute", "nofiltering"] # Group values based on relative or absolute values. Relative is recommended!
relative_filtering_value: [1] # % for relative value based filtering.
absolute_filtering_value: [2000] # number of reads for absolute value based filtering
abundance_filtre_level: ["Group"]
horizontal_plot: TRUE #(or 'FALSE') # Turn horizontally the plots
order_by_abundance: TRUE #(or 'FALSE') # Are the taxa to be ordered by abundace
t_neg_PCR_sample_on_plots: FALSE #(or 'FALSE') # Add negative samples, even if filtered out based on grouping_column.
t_neg_PCR_group_column_value: "t_neg_PCR" # To add negative samples, must be the values of the negative samples in the "grouping_column" indicated above
distinct_colors: TRUE #(or 'FALSE') # Use a automatic function to have distinct colors (barplots)
separated_legend: TRUE #(or 'FALSE') # should the legend be separated( barplots)

### Ordination parameters
ordination_distance: ["unifrac", "wunifrac", "jsd", "bray", "jaccard", "chao"]
ordination_method_distance_based: ["NMDS", "MDS", "PCoA"]
ordination_method_constrained: ["DCA", "CCA", "RDA", "CAP", "DPCoA"]
ordination_method_unconstrained: ["DCA", "CCA", "RDA", "DPCoA"]

## Special outputs ##############################################################################################################
### Phyloseq output for external plitting and analysis
filtered_phyloseq_output: False # Same but tax filtered output
phyloseq_tax_ranks: ["OTU"] # Which collapse level for phyloseq output
transposed_tables: False # True to have transposed count table

### Qiime2 Visualization information
Qiime2_basic_output_visualization: True # or False
