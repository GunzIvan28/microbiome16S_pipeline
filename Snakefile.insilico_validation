include: config["assembly_finder_Snakefile"]

## Include the pipeline rules
#include: "rules/0_preprocessing/make_output_list_files.rules"
include: "rules/0_preprocessing/logging.rules"
include: "rules/0_preprocessing/get_reads.rules"
include: "rules/0_preprocessing/get_sras.rules"
include: "rules/0_preprocessing/QC_raw_reads.rules"
include: "rules/1_2_DADA2_ASVs/1_cutadapt_trim.rules"
include: "rules/1_2_DADA2_ASVs/2_DADA2_denoising.rules"
include: "rules/1_2_vsearch_OTUs/1_PANDAseq_trim_filter_merge.rules"
include: "rules/1_2_vsearch_OTUs/2_vsearch_denoising.rules"
#include: "rules/5_visualization/QIIME2_import.rules"
include: "rules/In_silico/insilico_validation.rules"
include: "rules/In_silico/amplicons_reference.rules"



rule insilico_validation:
    input:
        expand("InSilico/3_classified/{classifier}_{tax_DB}/dna-sequences_tax_assignments.txt" , classifier = config["classifier"], tax_DB = config["tax_DB"]),
        "InSilico/2_denoised/count_table.txt",
        expand("InSilico/3_classified/{classifier}_{tax_DB}/InSilico_compare_tax.tsv", classifier = config["classifier"], tax_DB = config["tax_DB"])


print(set(list(all_samples[config["run_column"]])))

rule Qiime2_control_validation:
    input:
        expand("QualityControl/{denoiser}/{RUN}_compare_quality.png", RUN = set(list(all_samples[config["run_column"]])),  denoiser=["vsearch", "DADA2"]),
        expand("QualityControl/{denoiser}/compare_quality.pdf", denoiser=["vsearch", "DADA2"])
